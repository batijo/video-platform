version: '3'

networks:
  internal:
    external: false
  web:
    external: true

services:
  db:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSRGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    networks:
      - internal

  backend:
    container_name: ${BACKEND_CONTAINER_NAME}
    build: backend
    restart: unless-stopped
    environment:
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_HOST=db
      - PORT=8080
    volumes:
      - ./videos:/src/videos
    ports:
      - 8080:8080
    networks:
      - internal
    depends_on:
      - db

  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    build: nginx
    restart: unless-stopped
    volumes:
      - ./videos:/www/static/videos
      - ./frontend/dist:/www/static/frontend
    ports:
      - 1935:1935
      - 80:80
    networks:
      - internal
      - web
    depends_on:
      - backend

  frontend:
    container_name: ${FRONTEND_CONTAINER_NAME}
    build: frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
      - GATSBY_WEBPACK_PUBLICPATH=/
      - GATSBY_TELEMETRY_DISABLED=1
    volumes:
      - /app/node_modules
      - ./frontend:/app
    ports:
      - 8000:8000
      - 9929:9929
      - 9230:9230
    networks:
      - web
    depends_on:
      - nginx